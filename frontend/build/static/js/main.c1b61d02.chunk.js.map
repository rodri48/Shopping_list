{"version":3,"sources":["components/Headerbounce.js","components/Product.js","App.js","reportWebVitals.js","index.js"],"names":["Headerbounce","useState","flip","set","props","useSpring","to","opacity","from","reset","reverse","delay","config","molasses","onRest","h1","style","color","Product","foodName","setfoodName","foodList","setfoodList","newFoodName","setnewFoodName","visible","setvisible","useEffect","axios","get","then","response","data","className","type","onChange","event","target","value","motion","button","onClick","post","window","location","reload","whileHover","scale","whileTap","bottom","map","val","key","Badge","pill","variant","Button","marginBottom","id","_id","delete","put","placeholder","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAuBeA,MApBf,WACE,MAAoBC,oBAAS,GAA7B,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAQC,oBAAU,CACtBC,GAAI,CAAEC,QAAS,GACfC,KAAM,CAAED,QAAS,GACjBE,OAAO,EACPC,QAASR,EACTS,MAAO,IACPC,OAAQA,SAAOC,SACfC,OAAQ,kBAAMX,GAAKD,MAGrB,OACE,eAAC,WAASa,GAAV,CAAaC,MAAOZ,EAApB,UACG,IACD,oBAAIY,MAAO,CAAEC,MAAO,SAApB,wC,gHC+HSC,MAnIf,WACE,MAAgCjB,mBAAS,IAAzC,mBAAOkB,EAAP,KAAiBC,EAAjB,KACA,EAAgCnB,mBAAS,IAAzC,mBAAOoB,EAAP,KAAiBC,EAAjB,KACA,EAAsCrB,mBAAS,IAA/C,mBAAOsB,EAAP,KAAoBC,EAApB,KACA,EAA8BvB,oBAAS,GAAvC,mBAAOwB,EAAP,KAAgBC,EAAhB,KA2CA,OAzCAC,qBAAU,WACRC,IACGC,IAAI,oDACJC,MAAK,SAACC,GACLT,EAAYS,EAASC,WAExB,IAoCD,8BACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,aAAf,UAEE,+CACA,uBACEC,KAAK,OACLC,SAAU,SAACC,GACThB,EAAYgB,EAAMC,OAAOC,UAI7B,cAACC,EAAA,EAAOC,OAAR,CACEP,UAAU,MACVQ,QAjDQ,WAChBb,IACGc,KAAK,qDAAsD,CAC1DvB,SAAUA,IAEXW,MAAK,WACJa,OAAOC,SAASC,QAAO,OA4CnBC,WAAY,CAAEC,MAAO,KACrBC,SAAU,CAAED,MAAO,IAJrB,kBAWA,sCACA,cAAC,IAAD,CAAME,QAAM,EAAZ,SACE,8BACG5B,EAAS6B,KAAI,SAACC,EAAKC,GAClB,OACE,sBAAenB,UAAU,UAAzB,UACE,gCACE,qBAAKA,UAAU,WAAf,SACE,6BACE,cAACoB,EAAA,EAAD,CAAOC,MAAI,EAACC,QAAQ,UAApB,SACGJ,EAAIhC,eAKX,cAACqC,EAAA,EAAD,CACExC,MAAO,CAAEyC,aAAc,QACvBhB,QAAS,kBAjDXiB,EAiD4BP,EAAIQ,SAhDlD/B,IACGgC,OADH,6DACgEF,GAAM,IACnE5B,MAAK,WACJa,OAAOC,SAASC,QAAO,MAJV,IAACa,GAkDEH,QAAQ,UAHV,oBAQC9B,GACC,gCACE,cAAC+B,EAAA,EAAD,CAAQf,QAAS,kBAzErBiB,EAyEsCP,EAAIQ,SAxE5D/B,IACGiC,IAAI,qDAAsD,CACzDH,GAAIA,EACJnC,YAAaA,IAEdO,MAAK,WACJa,OAAOC,SAASC,QAAO,MAPV,IAACa,GAyEI,oBAGA,uBACExB,KAAK,OACL4B,YAAY,mBACZ3B,SAAU,SAACC,GACTZ,EAAeY,EAAMC,OAAOC,gBAOtC,cAAC,IAAD,CACEyB,gBAAiB,cAACC,EAAA,EAAD,IACjBC,kBAAmB,cAACC,EAAA,EAAD,QApCbd,UA2ClB,cAAC,IAAD,UACE,cAACI,EAAA,EAAD,CAAQf,QArFK,WACrBf,GAAW,SAACD,GAAD,OAAcA,MAoFgB8B,QAAQ,SAAzC,uCC1HGY,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.c1b61d02.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSpring, animated, config } from \"react-spring\";\r\n\r\nfunction Headerbounce() {\r\n  const [flip, set] = useState(false);\r\n  const props = useSpring({\r\n    to: { opacity: 1 },\r\n    from: { opacity: 0 },\r\n    reset: true,\r\n    reverse: flip,\r\n    delay: 200,\r\n    config: config.molasses,\r\n    onRest: () => set(!flip),\r\n  });\r\n\r\n  return (\r\n    <animated.h1 style={props}>\r\n      {\" \"}\r\n      <h1 style={{ color: \"white\" }}> Shopping grocery list</h1>\r\n    </animated.h1>\r\n  );\r\n}\r\n\r\nexport default Headerbounce;\r\n","import Headerbounce from \"./Headerbounce\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../src/App.css\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { motion } from \"framer-motion\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Switch } from \"antd\";\r\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\r\nimport Roll from \"react-reveal/Roll\";\r\nimport Wobble from \"react-reveal/Wobble\";\r\n\r\nfunction Product() {\r\n  const [foodName, setfoodName] = useState(\"\");\r\n  const [foodList, setfoodList] = useState([]);\r\n  const [newFoodName, setnewFoodName] = useState(\"\");\r\n  const [visible, setvisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://shopping-grocery-list.herokuapp.com/read\")\r\n      .then((response) => {\r\n        setfoodList(response.data);\r\n      });\r\n  }, []);\r\n\r\n  const addToList = () => {\r\n    axios\r\n      .post(\"https://shopping-grocery-list.herokuapp.com/insert\", {\r\n        foodName: foodName,\r\n      })\r\n      .then(() => {\r\n        window.location.reload(false);\r\n      });\r\n  };\r\n\r\n  const updateFood = (id) => {\r\n    axios\r\n      .put(\"https://shopping-grocery-list.herokuapp.com/update\", {\r\n        id: id,\r\n        newFoodName: newFoodName,\r\n      })\r\n      .then(() => {\r\n        window.location.reload(false);\r\n      });\r\n  };\r\n\r\n  /* hide editing */\r\n  const editingHandler = () => {\r\n    setvisible((visible) => !visible);\r\n  };\r\n\r\n  const deleteFood = (id) => {\r\n    axios\r\n      .delete(`https://shopping-grocery-list.herokuapp.com/delete/${id}`, {})\r\n      .then(() => {\r\n        window.location.reload(false);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"App\">\r\n        <Headerbounce />\r\n        <div className=\"decoration\">\r\n          {/* first part */}\r\n          <label>Food Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(event) => {\r\n              setfoodName(event.target.value);\r\n            }}\r\n          />\r\n\r\n          <motion.button\r\n            className=\"Add\"\r\n            onClick={addToList}\r\n            whileHover={{ scale: 1.1 }}\r\n            whileTap={{ scale: 0.9 }}\r\n          >\r\n            Add!\r\n          </motion.button>\r\n\r\n          {/* first part */}\r\n\r\n          <h1>Food</h1>\r\n          <Roll bottom>\r\n            <div>\r\n              {foodList.map((val, key) => {\r\n                return (\r\n                  <div key={key} className=\"product\">\r\n                    <div>\r\n                      <div className=\"checkbox\">\r\n                        <h3>\r\n                          <Badge pill variant=\"success\">\r\n                            {val.foodName}\r\n                          </Badge>\r\n                        </h3>\r\n                      </div>\r\n\r\n                      <Button\r\n                        style={{ marginBottom: \"10px\" }}\r\n                        onClick={() => deleteFood(val._id)}\r\n                        variant=\"success\"\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n\r\n                      {visible && (\r\n                        <div>\r\n                          <Button onClick={() => updateFood(val._id)}>\r\n                            Update\r\n                          </Button>\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"New food Name...\"\r\n                            onChange={(event) => {\r\n                              setnewFoodName(event.target.value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n\r\n                    <Switch\r\n                      checkedChildren={<CheckOutlined />}\r\n                      unCheckedChildren={<CloseOutlined />}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </Roll>\r\n          <Wobble>\r\n            <Button onClick={editingHandler} variant=\"danger\">\r\n              Update-Product\r\n            </Button>\r\n          </Wobble>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Product from \"./components/Product\";\n\nfunction App() {\n  return (\n    <div>\n      <Product />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}